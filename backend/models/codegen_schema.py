from pydantic import BaseModel, Field
from typing import List, Optional

class QualityReport(BaseModel):
    complexity_score: float
    maintainability_score: float
    security_score: float
    performance_score: float
    overall_grade: str
    recommendations: List[str]

class CodeGeneration(BaseModel):
    query: str
    language: str
    generated_code: Optional[str] = Field(None, description="The code generated by the model")
    title: Optional[str] = Field(None, description="Title for the generated code")


class ExtraGeneration(BaseModel):
    unit_tests: Optional[str] = Field(None, description="Unit tests for the generated code")
    documentation: Optional[str] = Field(None, description="Documentation for the generated code")
    quality_report: Optional[QualityReport] = Field(None, description="Quality report for the generated code")
